// <auto-generated />
using System;
using Cocotte.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cocotte.Migrations
{
    [DbContext(typeof(CocotteDbContext))]
    [Migration("20230325234255_AddActivityDueTime")]
    partial class AddActivityDueTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Cocotte.Modules.Activities.Models.Activity", b =>
                {
                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AreRolesEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatorDisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("CreatorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("DueTime")
                        .HasColumnType("TEXT");

                    b.Property<uint>("MaxPlayers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Name")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ThreadId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuildId", "ChannelId", "MessageId");

                    b.HasIndex("ThreadId");

                    b.ToTable("Activities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Activity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Cocotte.Modules.Activities.Models.ActivityPlayer", b =>
                {
                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuildId", "ChannelId", "MessageId", "UserId");

                    b.ToTable("ActivityPlayers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ActivityPlayer");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Cocotte.Modules.Activities.Models.InterstellarActivity", b =>
                {
                    b.HasBaseType("Cocotte.Modules.Activities.Models.Activity");

                    b.Property<int>("Color")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("InterstellarActivity");
                });

            modelBuilder.Entity("Cocotte.Modules.Activities.Models.StagedActivity", b =>
                {
                    b.HasBaseType("Cocotte.Modules.Activities.Models.Activity");

                    b.Property<uint>("Stage")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("StagedActivity");
                });

            modelBuilder.Entity("Cocotte.Modules.Activities.Models.ActivityRolePlayer", b =>
                {
                    b.HasBaseType("Cocotte.Modules.Activities.Models.ActivityPlayer");

                    b.Property<byte>("Roles")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("ActivityRolePlayer");
                });

            modelBuilder.Entity("Cocotte.Modules.Activities.Models.ActivityPlayer", b =>
                {
                    b.HasOne("Cocotte.Modules.Activities.Models.Activity", "Activity")
                        .WithMany("ActivityPlayers")
                        .HasForeignKey("GuildId", "ChannelId", "MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Cocotte.Modules.Activities.Models.Activity", b =>
                {
                    b.Navigation("ActivityPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
